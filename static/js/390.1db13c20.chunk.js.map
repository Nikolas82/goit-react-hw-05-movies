{"version":3,"file":"static/js/390.1db13c20.chunk.js","mappings":"kOAqDA,UAhDa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACRC,EAAUV,EACX,GAAE,CAACA,IAEJ,IAAMU,EAAS,mCAAG,WAAMV,GAAN,uFAEdM,GAAa,GAFC,UAGKK,EAAAA,EAAAA,IAAmBX,GAHxB,OAGRY,EAHQ,OAKdR,EAAUQ,GALI,gDAOdJ,EAAS,EAAD,IAPM,yBASdF,GAAa,GATC,4EAAH,sDAaf,OACE,gCACGD,GAAa,cACbE,IAAS,uBAAG,0CACb,wBACGJ,GACCA,EAAOU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACT,2BACE,gBACEC,IACEH,EAAY,0CAC2BA,GACnCI,EAENC,IAAI,MAEN,uBAAIJ,KACJ,yBAAG,aAAWC,OAVPH,EADA,QAiBpB,C,+LClDKO,EAAU,mCAEHC,EAAmB,mCAAG,6GAEVC,EAAAA,EAAAA,IAAA,kEACwCF,EADxC,oBAFU,cAEzBlB,EAFyB,yBAMxBA,EAAOS,KAAKY,SANY,gCAQ/BC,QAAQC,IAAR,MAR+B,yDAAH,qDAYnBC,EAAkB,mCAAG,WAAMb,GAAN,gGAETS,EAAAA,EAAAA,IAAA,6CACmBT,EADnB,oBACiCO,EADjC,oBAFS,cAExBlB,EAFwB,yBAMvBA,EAAOS,MANgB,gCAQ9Ba,QAAQC,IAAR,MAR8B,yDAAH,sDAYlBf,EAAkB,mCAAG,WAAMG,GAAN,gGAETS,EAAAA,EAAAA,IAAA,6CACmBT,EADnB,4BACyCO,EADzC,oBAFS,cAExBlB,EAFwB,yBAMvBA,EAAOS,KAAKgB,MANW,gCAQ9BH,QAAQC,IAAR,MAR8B,yDAAH,sDAYlBG,EAAkB,mCAAG,WAAMf,GAAN,gGAETS,EAAAA,EAAAA,IAAA,6CACmBT,EADnB,4BACyCO,EADzC,oBAFS,cAExBlB,EAFwB,yBAMvBA,EAAOS,KAAKY,SANW,gCAQ9BC,QAAQC,IAAR,MAR8B,yDAAH,sDAYlBI,EAAY,mCAAG,WAAMC,GAAN,gGAEHR,EAAAA,EAAAA,IAAA,4DACkCF,EADlC,kBACmDU,EADnD,oBAFG,cAElB5B,EAFkB,yBAMjBA,EAAOS,KAAKY,SANK,gCAQxBC,QAAQC,IAAR,MARwB,yDAAH,qD","sources":["components/cast/Cast.jsx","moviesService.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchCreditsMovies } from 'moviesService';\nimport defaultImage from '../image/image.png';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetchCast(movieId);\n  }, [movieId]);\n\n  const fetchCast = async movieId => {\n    try {\n      setIsLoading(true);\n      const data = await fetchCreditsMovies(movieId);\n\n      setMovies(data);\n    } catch (error) {\n      setError(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <>\n      {isLoading && 'Loading ...'}\n      {error && <p>An error occurred. Please try again.</p>}\n      <ul>\n        {movies &&\n          movies.map(({ id, profile_path, name, character }) => (\n            <li key={id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w200/${profile_path}`\n                    : defaultImage\n                }\n                alt=\"\"\n              />\n              <p>{name}</p>\n              <p>Character:{character}</p>\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\nconst API_KEY = '406bff9354a0d1960c3f65dfdea628e2';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const movies = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}&language=en-US`\n    );\n\n    return movies.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchDetailsMovies = async id => {\n  try {\n    const movies = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n\n    return movies.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchCreditsMovies = async id => {\n  try {\n    const movies = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n\n    return movies.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchReviewsMovies = async id => {\n  try {\n    const movies = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n\n    return movies.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const movies = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&language=en-US`\n    );\n\n    return movies.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["movieId","useParams","useState","movies","setMovies","isLoading","setIsLoading","error","setError","useEffect","fetchCast","fetchCreditsMovies","data","map","id","profile_path","name","character","src","defaultImage","alt","API_KEY","fetchTrendingMovies","axios","results","console","log","fetchDetailsMovies","cast","fetchReviewsMovies","searchMovies","query"],"sourceRoot":""}