{"version":3,"file":"static/js/415.8c0f2db7.chunk.js","mappings":"oKA6BA,IAzBmB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MACjB,OACE,+BACE,wBACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA1C,UACE,uBAAII,OAFCD,EADC,OAUnB,C,+LClBKK,EAAU,mCAEHC,EAAmB,mCAAG,6GAEVC,EAAAA,EAAAA,IAAA,kEACwCF,EADxC,oBAFU,cAEzBT,EAFyB,yBAMxBA,EAAOY,KAAKC,SANY,gCAQ/BC,QAAQC,IAAR,MAR+B,yDAAH,qDAYnBC,EAAkB,mCAAG,WAAMZ,GAAN,gGAETO,EAAAA,EAAAA,IAAA,6CACmBP,EADnB,oBACiCK,EADjC,oBAFS,cAExBT,EAFwB,yBAMvBA,EAAOY,MANgB,gCAQ9BE,QAAQC,IAAR,MAR8B,yDAAH,sDAYlBE,EAAkB,mCAAG,WAAMb,GAAN,gGAETO,EAAAA,EAAAA,IAAA,6CACmBP,EADnB,4BACyCK,EADzC,oBAFS,cAExBT,EAFwB,yBAMvBA,EAAOY,KAAKM,MANW,gCAQ9BJ,QAAQC,IAAR,MAR8B,yDAAH,sDAYlBI,EAAkB,mCAAG,WAAMf,GAAN,gGAETO,EAAAA,EAAAA,IAAA,6CACmBP,EADnB,4BACyCK,EADzC,oBAFS,cAExBT,EAFwB,yBAMvBA,EAAOY,KAAKC,SANW,gCAQ9BC,QAAQC,IAAR,MAR8B,yDAAH,sDAYlBK,EAAY,mCAAG,WAAMC,GAAN,gGAEHV,EAAAA,EAAAA,IAAA,4DACkCF,EADlC,kBACmDY,EADnD,oBAFG,cAElBrB,EAFkB,yBAMjBA,EAAOY,KAAKC,SANK,gCAQxBC,QAAQC,IAAR,MARwB,yDAAH,qD,yGCbzB,UAhCa,WACX,OAA4BO,EAAAA,EAAAA,UAAS,IAArC,eAAOtB,EAAP,KAAeuB,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACRC,GACD,GAAE,IAEH,IAAMA,EAAW,mCAAG,oGAEhBJ,GAAa,GAFG,UAGGf,EAAAA,EAAAA,MAHH,OAGVE,EAHU,OAKhBW,EAAUX,GALM,gDAOhBe,EAAS,EAAD,IAPQ,yBAShBF,GAAa,GATG,4EAAH,qDAajB,OACE,gCACGD,GAAa,cACbE,IAAS,uBAAG,0CACb,wBAAI,mBACH1B,IAAU,SAAC,IAAD,CAAYA,OAAQA,MAGpC,C","sources":["components/moviesList/MoviesList.jsx","moviesService.js","pages/Home.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <ul>\n        {movies.map(({ id, original_title }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <p>{original_title}</p>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\nexport default MoviesList;\n","import axios from 'axios';\nconst API_KEY = '406bff9354a0d1960c3f65dfdea628e2';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const movies = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}&language=en-US`\n    );\n\n    return movies.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchDetailsMovies = async id => {\n  try {\n    const movies = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n\n    return movies.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchCreditsMovies = async id => {\n  try {\n    const movies = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n\n    return movies.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchReviewsMovies = async id => {\n  try {\n    const movies = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n\n    return movies.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const movies = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&language=en-US`\n    );\n\n    return movies.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React from 'react';\nimport { useEffect, useState } from 'react';\n\nimport MoviesList from 'components/moviesList/MoviesList';\nimport { fetchTrendingMovies } from '../moviesService';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n\n  const fetchMovies = async () => {\n    try {\n      setIsLoading(true);\n      const data = await fetchTrendingMovies();\n\n      setMovies(data);\n    } catch (error) {\n      setError(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <>\n      {isLoading && 'Loading ...'}\n      {error && <p>An error occurred. Please try again.</p>}\n      <h1>Trending today</h1>\n      {movies && <MoviesList movies={movies} />}\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["movies","location","useLocation","map","id","original_title","to","state","from","API_KEY","fetchTrendingMovies","axios","data","results","console","log","fetchDetailsMovies","fetchCreditsMovies","cast","fetchReviewsMovies","searchMovies","query","useState","setMovies","isLoading","setIsLoading","error","setError","useEffect","fetchMovies"],"sourceRoot":""}