{"version":3,"file":"static/js/390.49824fe4.chunk.js","mappings":"yNAkDA,UA9Ca,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,WACRC,EAAUR,EACX,GAAE,CAACA,IAEJ,IAAMQ,EAAS,mCAAG,WAAMR,GAAN,uFAEdM,GAAa,GAFC,UAGKG,EAAAA,EAAAA,IAAmBT,GAHxB,OAGRU,EAHQ,OAKdN,EAAUM,GALI,gDAOdC,QAAQC,IAAR,MAPc,yBASdN,GAAa,GATC,4EAAH,sDAaf,OACE,gCACGD,GAAa,eACd,wBACGF,GACCA,EAAOU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACT,2BACE,gBACEC,IACEH,EAAY,0CAC2BA,GACnC,8BAENI,IAAI,MAEN,uBAAIH,KACJ,yBAAG,aAAWC,OAVPH,EADA,QAiBpB,C,+LC/CKM,EAAU,mCAEHC,EAAmB,mCAAG,6GAEVC,EAAAA,EAAAA,IAAA,kEACwCF,EADxC,oBAFU,cAEzBjB,EAFyB,yBAMxBA,EAAOO,KAAKa,SANY,gCAQ/BZ,QAAQC,IAAR,MAR+B,yDAAH,qDAYnBY,EAAkB,mCAAG,WAAMV,GAAN,gGAETQ,EAAAA,EAAAA,IAAA,6CACmBR,EADnB,oBACiCM,EADjC,oBAFS,cAExBjB,EAFwB,yBAMvBA,EAAOO,MANgB,gCAQ9BC,QAAQC,IAAR,MAR8B,yDAAH,sDAYlBH,EAAkB,mCAAG,WAAMK,GAAN,gGAETQ,EAAAA,EAAAA,IAAA,6CACmBR,EADnB,4BACyCM,EADzC,oBAFS,cAExBjB,EAFwB,yBAMvBA,EAAOO,KAAKe,MANW,gCAQ9Bd,QAAQC,IAAR,MAR8B,yDAAH,sDAYlBc,EAAkB,mCAAG,WAAMZ,GAAN,gGAETQ,EAAAA,EAAAA,IAAA,6CACmBR,EADnB,4BACyCM,EADzC,oBAFS,cAExBjB,EAFwB,yBAMvBA,EAAOO,KAAKa,SANW,gCAQ9BZ,QAAQC,IAAR,MAR8B,yDAAH,sDAYlBe,EAAY,mCAAG,WAAMC,GAAN,gGAEHN,EAAAA,EAAAA,IAAA,4DACkCF,EADlC,kBACmDQ,EADnD,oBAFG,cAElBzB,EAFkB,yBAMjBA,EAAOO,KAAKa,SANK,gCAQxBZ,QAAQC,IAAR,MARwB,yDAAH,qD","sources":["components/cast/Cast.jsx","components/moviesService.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchCreditsMovies } from 'components/moviesService';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    fetchCast(movieId);\n  }, [movieId]);\n\n  const fetchCast = async movieId => {\n    try {\n      setIsLoading(true);\n      const data = await fetchCreditsMovies(movieId);\n\n      setMovies(data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <>\n      {isLoading && 'Loading ...'}\n      <ul>\n        {movies &&\n          movies.map(({ id, profile_path, name, character }) => (\n            <li key={id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w200/${profile_path}`\n                    : 'http://placehold.it/200x300'\n                }\n                alt=\"\"\n              />\n              <p>{name}</p>\n              <p>Character:{character}</p>\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\nconst API_KEY = '406bff9354a0d1960c3f65dfdea628e2';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const movies = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}&language=en-US`\n    );\n\n    return movies.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchDetailsMovies = async id => {\n  try {\n    const movies = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n\n    return movies.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchCreditsMovies = async id => {\n  try {\n    const movies = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n\n    return movies.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchReviewsMovies = async id => {\n  try {\n    const movies = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n\n    return movies.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const movies = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&language=en-US`\n    );\n\n    return movies.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["movieId","useParams","useState","movies","setMovies","isLoading","setIsLoading","useEffect","fetchCast","fetchCreditsMovies","data","console","log","map","id","profile_path","name","character","src","alt","API_KEY","fetchTrendingMovies","axios","results","fetchDetailsMovies","cast","fetchReviewsMovies","searchMovies","query"],"sourceRoot":""}