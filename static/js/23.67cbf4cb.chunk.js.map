{"version":3,"file":"static/js/23.67cbf4cb.chunk.js","mappings":"uNA4CA,UAxCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACRC,EAAaV,EACd,GAAE,CAACA,IAEJ,IAAMU,EAAY,mCAAG,WAAMV,GAAN,uFAEjBM,GAAa,GAFI,UAGEK,EAAAA,EAAAA,IAAmBX,GAHrB,OAGXY,EAHW,OAKjBR,EAAUQ,GALO,gDAOjBJ,EAAS,EAAD,IAPS,yBASjBF,GAAa,GATI,4EAAH,sDAalB,OACE,gCACGD,GAAa,cACbE,IAAS,uBAAG,0CACb,wBACGJ,GACCA,EAAOU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACT,2BACE,0BAAI,UAAQD,MACZ,uBAAIC,MAFGF,EADA,QASpB,C,+LCzCKG,EAAU,mCAEHC,EAAmB,mCAAG,6GAEVC,EAAAA,EAAAA,IAAA,kEACwCF,EADxC,oBAFU,cAEzBd,EAFyB,yBAMxBA,EAAOS,KAAKQ,SANY,gCAQ/BC,QAAQC,IAAR,MAR+B,yDAAH,qDAYnBC,EAAkB,mCAAG,WAAMT,GAAN,gGAETK,EAAAA,EAAAA,IAAA,6CACmBL,EADnB,oBACiCG,EADjC,oBAFS,cAExBd,EAFwB,yBAMvBA,EAAOS,MANgB,gCAQ9BS,QAAQC,IAAR,MAR8B,yDAAH,sDAYlBE,EAAkB,mCAAG,WAAMV,GAAN,gGAETK,EAAAA,EAAAA,IAAA,6CACmBL,EADnB,4BACyCG,EADzC,oBAFS,cAExBd,EAFwB,yBAMvBA,EAAOS,KAAKa,MANW,gCAQ9BJ,QAAQC,IAAR,MAR8B,yDAAH,sDAYlBX,EAAkB,mCAAG,WAAMG,GAAN,gGAETK,EAAAA,EAAAA,IAAA,6CACmBL,EADnB,4BACyCG,EADzC,oBAFS,cAExBd,EAFwB,yBAMvBA,EAAOS,KAAKQ,SANW,gCAQ9BC,QAAQC,IAAR,MAR8B,yDAAH,sDAYlBI,EAAY,mCAAG,WAAMC,GAAN,gGAEHR,EAAAA,EAAAA,IAAA,4DACkCF,EADlC,kBACmDU,EADnD,oBAFG,cAElBxB,EAFkB,yBAMjBA,EAAOS,KAAKQ,SANK,gCAQxBC,QAAQC,IAAR,MARwB,yDAAH,qD","sources":["components/reviews/Reviews.jsx","moviesService.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchReviewsMovies } from 'moviesService';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetchReviews(movieId);\n  }, [movieId]);\n\n  const fetchReviews = async movieId => {\n    try {\n      setIsLoading(true);\n      const data = await fetchReviewsMovies(movieId);\n\n      setMovies(data);\n    } catch (error) {\n      setError(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <>\n      {isLoading && 'Loading ...'}\n      {error && <p>An error occurred. Please try again.</p>}\n      <ul>\n        {movies &&\n          movies.map(({ id, author, content }) => (\n            <li key={id}>\n              <h4>Author:{author}</h4>\n              <p>{content}</p>\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nconst API_KEY = '406bff9354a0d1960c3f65dfdea628e2';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const movies = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}&language=en-US`\n    );\n\n    return movies.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchDetailsMovies = async id => {\n  try {\n    const movies = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n\n    return movies.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchCreditsMovies = async id => {\n  try {\n    const movies = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n\n    return movies.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchReviewsMovies = async id => {\n  try {\n    const movies = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n\n    return movies.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const movies = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&language=en-US`\n    );\n\n    return movies.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["movieId","useParams","useState","movies","setMovies","isLoading","setIsLoading","error","setError","useEffect","fetchReviews","fetchReviewsMovies","data","map","id","author","content","API_KEY","fetchTrendingMovies","axios","results","console","log","fetchDetailsMovies","fetchCreditsMovies","cast","searchMovies","query"],"sourceRoot":""}