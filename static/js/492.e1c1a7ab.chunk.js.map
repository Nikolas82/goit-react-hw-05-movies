{"version":3,"file":"static/js/492.e1c1a7ab.chunk.js","mappings":"iOA+FA,UAzFqB,WAAO,IAAD,IACjBA,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,MAEpDC,EAAAA,EAAAA,YAAU,WACRC,EAAad,EACd,GAAE,CAACA,IAEJ,IAiByBe,EAjBnBD,EAAY,mCAAG,WAAMd,GAAN,uFAEjBM,GAAa,GAFI,UAGEU,EAAAA,EAAAA,IAAmBhB,GAHrB,OAGXiB,EAHW,OAKjBb,EAASa,GALQ,gDAOjBC,QAAQC,IAAR,MAPiB,yBASjBb,GAAa,GATI,4EAAH,sDAqBlB,OACE,iCACE,8BACG,KACD,SAAC,KAAD,CAAMc,GAAIX,EAAaY,QAAvB,SAAgC,aAGlC,iBACEC,MAAO,CACLC,QAAS,OACTC,IAAK,QAHT,UAMGnB,GAAa,cAEbF,IACC,iCACE,0BACE,gBACEsB,IAAG,0CAAqCtB,EAAMuB,aAC9CC,IAAI,QAGR,4BACE,0BACGxB,EAAMyB,OACP,4BAAM,KAjCX,IAAIC,KAAK1B,EAAM2B,cAAcC,cAiCD,WAEzB,yBAAG,gBAhCUhB,EAgCoBZ,EAAM6B,WA/B1CC,KAAKC,MAAMnB,EAAQ,KAAO,SAgCvB,wBAAI,cACJ,uBAAIZ,EAAMgC,YACV,wBAAI,YACJ,uBACGhC,EAAMiC,OAAOC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OAChB,4BAAe,IAAEA,IAAND,EADK,gBAQ5B,4BACE,uBAAG,4BACH,SAAC,KAAD,CAASlB,GAAE,kBAAapB,EAAb,SAAX,UACE,uBAAG,YAEL,SAAC,KAAD,CAASoB,GAAE,kBAAapB,EAAb,YAAX,UACE,uBAAG,kBAGP,SAAC,KAAD,MAGL,C,+LC5FKwC,EAAU,mCAEHC,EAAmB,mCAAG,6GAEVC,EAAAA,EAAAA,IAAA,kEACwCF,EADxC,oBAFU,cAEzBG,EAFyB,yBAMxBA,EAAO1B,KAAK2B,SANY,gCAQ/B1B,QAAQC,IAAR,MAR+B,yDAAH,qDAYnBH,EAAkB,mCAAG,WAAMsB,GAAN,gGAETI,EAAAA,EAAAA,IAAA,6CACmBJ,EADnB,oBACiCE,EADjC,oBAFS,cAExBG,EAFwB,yBAMvBA,EAAO1B,MANgB,gCAQ9BC,QAAQC,IAAR,MAR8B,yDAAH,sDAYlB0B,EAAkB,mCAAG,WAAMP,GAAN,gGAETI,EAAAA,EAAAA,IAAA,6CACmBJ,EADnB,4BACyCE,EADzC,oBAFS,cAExBG,EAFwB,yBAMvBA,EAAO1B,KAAK6B,MANW,gCAQ9B5B,QAAQC,IAAR,MAR8B,yDAAH,sDAYlB4B,EAAkB,mCAAG,WAAMT,GAAN,gGAETI,EAAAA,EAAAA,IAAA,6CACmBJ,EADnB,4BACyCE,EADzC,oBAFS,cAExBG,EAFwB,yBAMvBA,EAAO1B,KAAK2B,SANW,gCAQ9B1B,QAAQC,IAAR,MAR8B,yDAAH,sDAYlB6B,EAAY,mCAAG,WAAMC,GAAN,gGAEHP,EAAAA,EAAAA,IAAA,4DACkCF,EADlC,kBACmDS,EADnD,oBAFG,cAElBN,EAFkB,yBAMjBA,EAAO1B,KAAK2B,SANK,gCAQxB1B,QAAQC,IAAR,MARwB,yDAAH,qD","sources":["components/movieDetails/MovieDetails.jsx","components/moviesService.js"],"sourcesContent":["import { useParams, Outlet, useLocation, Link } from 'react-router-dom';\nimport { useEffect, useRef, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { fetchDetailsMovies } from 'components/moviesService';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const location = useLocation();\n  const backLocation = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    fetchDetails(movieId);\n  }, [movieId]);\n\n  const fetchDetails = async movieId => {\n    try {\n      setIsLoading(true);\n      const data = await fetchDetailsMovies(movieId);\n\n      setMovie(data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const releaseYear = () => {\n    return new Date(movie.release_date).getFullYear();\n  };\n\n  const formatPercentage = value => {\n    return Math.round(value / 100) + '%';\n  };\n\n  return (\n    <>\n      <button>\n        {' '}\n        <Link to={backLocation.current}>Back</Link>\n      </button>\n\n      <div\n        style={{\n          display: 'flex',\n          gap: '20px',\n        }}\n      >\n        {isLoading && 'Loading ...'}\n\n        {movie && (\n          <>\n            <div>\n              <img\n                src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`}\n                alt=\"\"\n              />\n            </div>\n            <div>\n              <h2>\n                {movie.title}\n                <span> ({releaseYear()})</span>\n              </h2>\n              <p>User Score: {formatPercentage(movie.popularity)}</p>\n              <h3>Overview</h3>\n              <p>{movie.overview}</p>\n              <h4>Genres</h4>\n              <p>\n                {movie.genres.map(({ id, name }) => (\n                  <span key={id}> {name}</span>\n                ))}\n              </p>\n            </div>\n          </>\n        )}\n      </div>\n      <div>\n        <p>Additional information</p>\n        <NavLink to={`/movies/${movieId}/cast`}>\n          <p>Cast</p>\n        </NavLink>\n        <NavLink to={`/movies/${movieId}/reviews`}>\n          <p>Reviews</p>\n        </NavLink>\n      </div>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nconst API_KEY = '406bff9354a0d1960c3f65dfdea628e2';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const movies = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}&language=en-US`\n    );\n\n    return movies.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchDetailsMovies = async id => {\n  try {\n    const movies = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n\n    return movies.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchCreditsMovies = async id => {\n  try {\n    const movies = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n\n    return movies.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchReviewsMovies = async id => {\n  try {\n    const movies = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n\n    return movies.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const movies = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&language=en-US`\n    );\n\n    return movies.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["movieId","useParams","useState","movie","setMovie","isLoading","setIsLoading","location","useLocation","backLocation","useRef","state","from","useEffect","fetchDetails","value","fetchDetailsMovies","data","console","log","to","current","style","display","gap","src","poster_path","alt","title","Date","release_date","getFullYear","popularity","Math","round","overview","genres","map","id","name","API_KEY","fetchTrendingMovies","axios","movies","results","fetchCreditsMovies","cast","fetchReviewsMovies","searchMovies","query"],"sourceRoot":""}