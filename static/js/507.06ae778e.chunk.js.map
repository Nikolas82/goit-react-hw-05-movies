{"version":3,"file":"static/js/507.06ae778e.chunk.js","mappings":"iOAmEA,UA9De,WACb,OAAwCA,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BC,EAAAA,EAAAA,YAA5B,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAcT,EAAaU,IAAI,UAErCC,EAAAA,EAAAA,YAAU,WACY,KAAhBF,GACAA,GACFG,EAAWH,EAEd,GAAE,CAACA,IAEJ,IAMMG,EAAU,mCAAG,WAAMH,GAAN,uFAEfH,GAAa,GAFE,UAGIO,EAAAA,EAAAA,IAAaJ,GAHjB,OAGTK,EAHS,OAKfV,EAAUU,GALK,gDAOfC,QAAQC,IAAR,MAPe,yBASfV,GAAa,GATE,4EAAH,sDAahB,OACE,4BACE,kBAAMW,SArBY,SAAAC,GACpBA,EAAEC,iBAEFlB,EAAgB,CAAEmB,MAAOF,EAAEG,cAAcC,SAASF,MAAMG,QACxDL,EAAEG,cAAcG,OACjB,EAgBG,WACE,kBACEC,KAAK,OACLC,KAAK,QACLC,aAAa,KACbC,YAAY,sBAEd,mBAAQH,KAAK,SAAb,SAAsB,cAGvBpB,GAAa,eACd,wBACGF,GACCA,EAAO0B,KAAI,SAAAC,GAAK,OACd,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAM3B,GAAhD,SACGuB,EAAMK,kBAFFL,EAAME,GADD,QAUzB,C,+LChEKI,EAAU,mCAEHC,EAAmB,mCAAG,6GAEVC,EAAAA,EAAAA,IAAA,kEACwCF,EADxC,oBAFU,cAEzBjC,EAFyB,yBAMxBA,EAAOW,KAAKyB,SANY,gCAQ/BxB,QAAQC,IAAR,MAR+B,yDAAH,qDAYnBwB,EAAkB,mCAAG,WAAMR,GAAN,gGAETM,EAAAA,EAAAA,IAAA,6CACmBN,EADnB,oBACiCI,EADjC,oBAFS,cAExBjC,EAFwB,yBAMvBA,EAAOW,MANgB,gCAQ9BC,QAAQC,IAAR,MAR8B,yDAAH,sDAYlByB,EAAkB,mCAAG,WAAMT,GAAN,gGAETM,EAAAA,EAAAA,IAAA,6CACmBN,EADnB,4BACyCI,EADzC,oBAFS,cAExBjC,EAFwB,yBAMvBA,EAAOW,KAAK4B,MANW,gCAQ9B3B,QAAQC,IAAR,MAR8B,yDAAH,sDAYlB2B,EAAkB,mCAAG,WAAMX,GAAN,gGAETM,EAAAA,EAAAA,IAAA,6CACmBN,EADnB,4BACyCI,EADzC,oBAFS,cAExBjC,EAFwB,yBAMvBA,EAAOW,KAAKyB,SANW,gCAQ9BxB,QAAQC,IAAR,MAR8B,yDAAH,sDAYlBH,EAAY,mCAAG,WAAMO,GAAN,gGAEHkB,EAAAA,EAAAA,IAAA,4DACkCF,EADlC,kBACmDhB,EADnD,oBAFG,cAElBjB,EAFkB,yBAMjBA,EAAOW,KAAKyB,SANK,gCAQxBxB,QAAQC,IAAR,MARwB,yDAAH,qD","sources":["components/movies/Movies.jsx","components/moviesService.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\n\nimport { searchMovies } from 'components/moviesService';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const location = useLocation();\n\n  const searchQuery = searchParams.get('query');\n\n  useEffect(() => {\n    if (searchQuery === '') return;\n    if (searchQuery) {\n      fetchQuery(searchQuery);\n    }\n  }, [searchQuery]);\n\n  const handlerSubmit = e => {\n    e.preventDefault();\n\n    setSearchParams({ query: e.currentTarget.elements.query.value });\n    e.currentTarget.reset();\n  };\n  const fetchQuery = async searchQuery => {\n    try {\n      setIsLoading(true);\n      const data = await searchMovies(searchQuery);\n\n      setMovies(data);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handlerSubmit}>\n        <input\n          type=\"text\"\n          name=\"query\"\n          autoComplete=\"on\"\n          placeholder=\"Search movies...\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      {isLoading && 'Loading ...'}\n      <ul>\n        {movies &&\n          movies.map(movie => (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.original_title}\n              </Link>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nconst API_KEY = '406bff9354a0d1960c3f65dfdea628e2';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const movies = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}&language=en-US`\n    );\n\n    return movies.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchDetailsMovies = async id => {\n  try {\n    const movies = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n\n    return movies.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchCreditsMovies = async id => {\n  try {\n    const movies = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n\n    return movies.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchReviewsMovies = async id => {\n  try {\n    const movies = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n\n    return movies.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const movies = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&language=en-US`\n    );\n\n    return movies.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["useSearchParams","searchParams","setSearchParams","useState","movies","setMovies","isLoading","setIsLoading","location","useLocation","searchQuery","get","useEffect","fetchQuery","searchMovies","data","console","log","onSubmit","e","preventDefault","query","currentTarget","elements","value","reset","type","name","autoComplete","placeholder","map","movie","to","id","state","from","original_title","API_KEY","fetchTrendingMovies","axios","results","fetchDetailsMovies","fetchCreditsMovies","cast","fetchReviewsMovies"],"sourceRoot":""}